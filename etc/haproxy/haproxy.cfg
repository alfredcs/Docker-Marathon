global
  daemon
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  maxconn 4096
  tune.ssl.default-dh-param 2048
  chroot /var/run/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  pidfile     /var/run/haproxy.pid

defaults
  log               global
  retries           3
  maxconn           2000
  timeout connect   5s
  timeout client    50s
  timeout server    50s

listen stats
  bind 127.0.0.1:9090
  balance
  mode http
  stats enable
  stats auth admin:topP1ssw0rd

userlist UsersFor_Mesos_API
  group adm users adminUser,admin
  group ops users adminUser
  user adminUser password $6$iRwbkqxHH$lsftrLz9fJodH/Qums61xeiYdKItL9TPApR3zcRkOXj94J5PyQ/.kW3lk1Z/SSXhGUTKVLfQVByKfgbZKKbSb.
  user admin password $6$iRwbkqxHH$lsftrLz9fJodH/Qums61xeiYdKItL9TPApR3zcRkOXj94J5PyQ/.kW3lk1Z/SSXhGUTKVLfQVByKfgbZKKbSb.

frontend marathon_api_https
  mode tcp
  bind *:1443 
  #reqadd X-Forwarded-Proto:\ https
  option socket-stats
  tcp-request inspect-delay 5s
  tcp-request content accept if { req_ssl_hello_type 1 }
  #use_backend marathon_api if { req_ssl_sni -i crd.aghoo.com }
  use_backend marathon_api

backend marathon_api
  mode tcp
  balance leastconn
  # maximum SSL session ID length is 32 bytes.
  stick-table type binary len 32 size 30k expire 30m
  acl clienthello req_ssl_hello_type 1
  acl serverhello rep_ssl_hello_type 2
  # use tcp content accepts to detects ssl client and server hello.
  tcp-request inspect-delay 5s
  tcp-request content accept if clienthello
  # no timeout on response inspect delay by default.
  tcp-response content accept if serverhello
  stick on payload_lv(43,1) if clienthello
  # Learn on response if server hello.
  stick store-response payload_lv(43,1) if serverhello
  option ssl-hello-chk
  option log-health-checks
  server marathon_api-1 mesos-m1:8443
  server marathon-api-2 mesos-m2:8443
  server marathon-api-3 mesos-m3:8443

frontend chronos_api_https
  bind *:4401 ssl crt /etc/marathon/ssl/private/mesos.pem
  reqadd X-Forwarded-Proto:\ https
  option  contstats
  use_backend chronos_api

backend chronos_api
  mode http
  acl AuthOkay_Mesos http_auth_group(UsersFor_Mesos_API) ops
  http-request auth realm MyAuthRealm if !AuthOkay_Mesos
  option  httplog
  monitor-uri  /scheduler/jobs
  server chronos-api-1 mesos-m1:4400 check inter 10000 fall 4 rise 3
  server chronos-api-2 mesos-m2:4400 check inter 10000 fall 4 rise 3
  server chronos-api-3 mesos-m3:4400 check inter 10000 fall 4 rise 3

frontend mesos_api_https
  bind *:5550 ssl crt /etc/marathon/ssl/private/mesos.pem
  reqadd X-Forwarded-Proto:\ https
  option  contstats
  use_backend mesos_api

backend mesos_api
  mode http
  acl AuthOkay_Mesos http_auth_group(UsersFor_Mesos_API) ops
  http-request auth realm MyAuthRealm if !AuthOkay_Mesos
  balance leastconn
  option  httplog
  monitor-uri  /static/js/app.js
  cookie SERVERID insert indirect nocache
  server mesos-api-1 mesos-m1:5050 check inter 10000 fall 4 rise 3
  server mesos-api-2 mesos-m2:5050 check inter 10000 fall 4 rise 3
  server mesos-api-3 mesos-m3:5050 check inter 10000 fall 4 rise 3

#frontend marathon_http_appid_in
#  bind *:81
#  mode http
  acl app__mysql hdr(x-marathon-app-id) -i /mysql
  use_backend mysql_10002 if app__mysql

#frontend marathon_https_in
#  bind *:443 ssl crt /etc/ssl/mesosphere.com.pem
#  mode http

frontend basic-0_10000
  bind *:10000
  mode tcp
  use_backend basic-0_10000

frontend basic-httpd_18080
  bind *:18080
  mode tcp
  use_backend basic-httpd_18080

frontend casscluster_cass311_seed_7000
  bind *:7000
  mode tcp
  use_backend casscluster_cass311_seed_7000

frontend casscluster_cass311_seed_7001
  bind *:7001
  mode tcp
  use_backend casscluster_cass311_seed_7001

frontend casscluster_cass311_seed_7199
  bind *:7199
  mode tcp
  use_backend casscluster_cass311_seed_7199

frontend casscluster_cass311_seed_8888
  bind *:8888
  mode tcp
  use_backend casscluster_cass311_seed_8888

frontend casscluster_cass311_seed_9042
  bind *:9042
  mode tcp
  use_backend casscluster_cass311_seed_9042

frontend casscluster_cass311_seed_9160
  bind *:9160
  mode tcp
  use_backend casscluster_cass311_seed_9160

frontend casscluster_cass311_seed_61620
  bind *:61620
  mode tcp
  use_backend casscluster_cass311_seed_61620

frontend casscluster_cass311_seed_61621
  bind *:61621
  mode tcp
  use_backend casscluster_cass311_seed_61621

frontend docker-clean_10001
  bind *:10001
  mode tcp
  use_backend docker-clean_10001

frontend mysql_10002
  bind *:10002
  mode http
  use_backend mysql_10002

frontend mysql_10003
  bind *:10003
  mode tcp
  use_backend mysql_10003

backend basic-0_10000
  balance roundrobin
  mode tcp
  server ip-10-0-0-69_31357 10.0.0.69:31357
  server ip-10-0-10-176_31763 10.0.10.176:31763
  server ip-10-0-10-230_31578 10.0.10.230:31578
  server ip-10-0-10-232_31330 10.0.10.232:31330
  server ip-10-0-10-233_31688 10.0.10.233:31688
  server ip-10-0-10-234_31646 10.0.10.234:31646
  server ip-10-0-2-178_31144 10.0.2.178:31144

backend basic-httpd_18080
  balance roundrobin
  mode tcp
  server ip-10-0-10-233_31983 10.0.10.233:31983

backend casscluster_cass311_seed_7000
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_7000 10.0.10.178:7000
  server ip-10-0-10-177_7000 10.0.10.177:7000
  server ip-10-0-10-175_7000 10.0.10.175:7000
  server ip-10-0-10-174_7000 10.0.10.174:7000

backend casscluster_cass311_seed_7001
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_7001 10.0.10.178:7001
  server ip-10-0-10-177_7001 10.0.10.177:7001
  server ip-10-0-10-175_7001 10.0.10.175:7001
  server ip-10-0-10-174_7001 10.0.10.174:7001

backend casscluster_cass311_seed_7199
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_7199 10.0.10.178:7199
  server ip-10-0-10-177_7199 10.0.10.177:7199
  server ip-10-0-10-175_7199 10.0.10.175:7199
  server ip-10-0-10-174_7199 10.0.10.174:7199

backend casscluster_cass311_seed_8888
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_8888 10.0.10.178:8888
  server ip-10-0-10-177_8888 10.0.10.177:8888
  server ip-10-0-10-175_8888 10.0.10.175:8888
  server ip-10-0-10-174_8888 10.0.10.174:8888

backend casscluster_cass311_seed_9042
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_9042 10.0.10.178:9042
  server ip-10-0-10-177_9042 10.0.10.177:9042
  server ip-10-0-10-175_9042 10.0.10.175:9042
  server ip-10-0-10-174_9042 10.0.10.174:9042

backend casscluster_cass311_seed_9160
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_9160 10.0.10.178:9160
  server ip-10-0-10-177_9160 10.0.10.177:9160
  server ip-10-0-10-175_9160 10.0.10.175:9160
  server ip-10-0-10-174_9160 10.0.10.174:9160

backend casscluster_cass311_seed_61620
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_61620 10.0.10.178:61620
  server ip-10-0-10-177_61620 10.0.10.177:61620
  server ip-10-0-10-175_61620 10.0.10.175:61620
  server ip-10-0-10-174_61620 10.0.10.174:61620

backend casscluster_cass311_seed_61621
  balance roundrobin
  mode tcp
  server ip-10-0-10-178_61621 10.0.10.178:61621
  server ip-10-0-10-177_61621 10.0.10.177:61621
  server ip-10-0-10-175_61621 10.0.10.175:61621
  server ip-10-0-10-174_61621 10.0.10.174:61621

backend docker-clean_10001
  balance roundrobin
  mode tcp
  server ip-10-0-0-69_31495 10.0.0.69:31495
  server ip-10-0-10-174_31925 10.0.10.174:31925
  server ip-10-0-10-175_31459 10.0.10.175:31459
  server ip-10-0-10-176_31562 10.0.10.176:31562
  server ip-10-0-10-177_31263 10.0.10.177:31263
  server ip-10-0-10-178_31556 10.0.10.178:31556
  server ip-10-0-10-230_31224 10.0.10.230:31224
  server ip-10-0-10-231_31863 10.0.10.231:31863
  server ip-10-0-10-232_31403 10.0.10.232:31403
  server ip-10-0-10-233_31378 10.0.10.233:31378
  server ip-10-0-10-234_31115 10.0.10.234:31115
  server ip-10-0-2-178_31728 10.0.2.178:31728

backend mysql_10002
  balance roundrobin
  mode http
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  server ip-10-0-10-177_31716 10.0.10.177:31716

backend mysql_10003
  balance roundrobin
  mode tcp
  server ip-10-0-10-177_31717 10.0.10.177:31717
